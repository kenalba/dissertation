:: StoryTitle
Dissertation


:: StoryData
{
	"ifid": "AD0660F8-FF49-46A8-B178-0AF39F853F11",
	"format": "SugarCube",
	"format-version": "2.31.1",
	"start": "Title Page",
	"zoom": 1
}

:: Story Stylesheet [stylesheet]

:: Story JavaScript [script]
postrender["Associate Special Passages"] = function (content, taskName) {
	setPageElement("story-title", "StoryTitle", Story.title);
	setPageElement("story-banner","StoryBanner");
	setPageElement("story-subtitle","StorySubtitle");
	setPageElement("story-author","StoryAuthor");
	setPageElement("story-caption","StoryCaption");
}

// Initialize correct and incorrect guess counters

var coll = document.getElementsByClassName("collapsible");
var i;

for (i = 0; i < coll.length; i++) {
  coll[i].addEventListener("click", function() {
    this.classList.toggle("active");
    var content = this.nextElementSibling;
    if (content.style.display === "block") {
      content.style.display = "none";
    } else {
      content.style.display = "block";
    }
  });
}

/* mousetrap v1.6.5 craig.is/killing/mice */
(function(q,u,c){function v(a,b,g){a.addEventListener?a.addEventListener(b,g,!1):a.attachEvent("on"+b,g)}function z(a){if("keypress"==a.type){var b=String.fromCharCode(a.which);a.shiftKey||(b=b.toLowerCase());return b}return n[a.which]?n[a.which]:r[a.which]?r[a.which]:String.fromCharCode(a.which).toLowerCase()}function F(a){var b=[];a.shiftKey&&b.push("shift");a.altKey&&b.push("alt");a.ctrlKey&&b.push("ctrl");a.metaKey&&b.push("meta");return b}function w(a){return"shift"==a||"ctrl"==a||"alt"==a||
"meta"==a}function A(a,b){var g,d=[];var e=a;"+"===e?e=["+"]:(e=e.replace(/\+{2}/g,"+plus"),e=e.split("+"));for(g=0;g<e.length;++g){var m=e[g];B[m]&&(m=B[m]);b&&"keypress"!=b&&C[m]&&(m=C[m],d.push("shift"));w(m)&&d.push(m)}e=m;g=b;if(!g){if(!p){p={};for(var c in n)95<c&&112>c||n.hasOwnProperty(c)&&(p[n[c]]=c)}g=p[e]?"keydown":"keypress"}"keypress"==g&&d.length&&(g="keydown");return{key:m,modifiers:d,action:g}}function D(a,b){return null===a||a===u?!1:a===b?!0:D(a.parentNode,b)}function d(a){function b(a){a=
a||{};var b=!1,l;for(l in p)a[l]?b=!0:p[l]=0;b||(x=!1)}function g(a,b,t,f,g,d){var l,E=[],h=t.type;if(!k._callbacks[a])return[];"keyup"==h&&w(a)&&(b=[a]);for(l=0;l<k._callbacks[a].length;++l){var c=k._callbacks[a][l];if((f||!c.seq||p[c.seq]==c.level)&&h==c.action){var e;(e="keypress"==h&&!t.metaKey&&!t.ctrlKey)||(e=c.modifiers,e=b.sort().join(",")===e.sort().join(","));e&&(e=f&&c.seq==f&&c.level==d,(!f&&c.combo==g||e)&&k._callbacks[a].splice(l,1),E.push(c))}}return E}function c(a,b,c,f){k.stopCallback(b,
b.target||b.srcElement,c,f)||!1!==a(b,c)||(b.preventDefault?b.preventDefault():b.returnValue=!1,b.stopPropagation?b.stopPropagation():b.cancelBubble=!0)}function e(a){"number"!==typeof a.which&&(a.which=a.keyCode);var b=z(a);b&&("keyup"==a.type&&y===b?y=!1:k.handleKey(b,F(a),a))}function m(a,g,t,f){function h(c){return function(){x=c;++p[a];clearTimeout(q);q=setTimeout(b,1E3)}}function l(g){c(t,g,a);"keyup"!==f&&(y=z(g));setTimeout(b,10)}for(var d=p[a]=0;d<g.length;++d){var e=d+1===g.length?l:h(f||
A(g[d+1]).action);n(g[d],e,f,a,d)}}function n(a,b,c,f,d){k._directMap[a+":"+c]=b;a=a.replace(/\s+/g," ");var e=a.split(" ");1<e.length?m(a,e,b,c):(c=A(a,c),k._callbacks[c.key]=k._callbacks[c.key]||[],g(c.key,c.modifiers,{type:c.action},f,a,d),k._callbacks[c.key][f?"unshift":"push"]({callback:b,modifiers:c.modifiers,action:c.action,seq:f,level:d,combo:a}))}var k=this;a=a||u;if(!(k instanceof d))return new d(a);k.target=a;k._callbacks={};k._directMap={};var p={},q,y=!1,r=!1,x=!1;k._handleKey=function(a,
d,e){var f=g(a,d,e),h;d={};var k=0,l=!1;for(h=0;h<f.length;++h)f[h].seq&&(k=Math.max(k,f[h].level));for(h=0;h<f.length;++h)f[h].seq?f[h].level==k&&(l=!0,d[f[h].seq]=1,c(f[h].callback,e,f[h].combo,f[h].seq)):l||c(f[h].callback,e,f[h].combo);f="keypress"==e.type&&r;e.type!=x||w(a)||f||b(d);r=l&&"keydown"==e.type};k._bindMultiple=function(a,b,c){for(var d=0;d<a.length;++d)n(a[d],b,c)};v(a,"keypress",e);v(a,"keydown",e);v(a,"keyup",e)}if(q){var n={8:"backspace",9:"tab",13:"enter",16:"shift",17:"ctrl",
18:"alt",20:"capslock",27:"esc",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down",45:"ins",46:"del",91:"meta",93:"meta",224:"meta"},r={106:"*",107:"+",109:"-",110:".",111:"/",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'"},C={"~":"`","!":"1","@":"2","#":"3",$:"4","%":"5","^":"6","&":"7","*":"8","(":"9",")":"0",_:"-","+":"=",":":";",'"':"'","<":",",">":".","?":"/","|":"\\"},B={option:"alt",command:"meta","return":"enter",
escape:"esc",plus:"+",mod:/Mac|iPod|iPhone|iPad/.test(navigator.platform)?"meta":"ctrl"},p;for(c=1;20>c;++c)n[111+c]="f"+c;for(c=0;9>=c;++c)n[c+96]=c.toString();d.prototype.bind=function(a,b,c){a=a instanceof Array?a:[a];this._bindMultiple.call(this,a,b,c);return this};d.prototype.unbind=function(a,b){return this.bind.call(this,a,function(){},b)};d.prototype.trigger=function(a,b){if(this._directMap[a+":"+b])this._directMap[a+":"+b]({},a);return this};d.prototype.reset=function(){this._callbacks={};
this._directMap={};return this};d.prototype.stopCallback=function(a,b){if(-1<(" "+b.className+" ").indexOf(" mousetrap ")||D(b,this.target))return!1;if("composedPath"in a&&"function"===typeof a.composedPath){var c=a.composedPath()[0];c!==a.target&&(b=c)}return"INPUT"==b.tagName||"SELECT"==b.tagName||"TEXTAREA"==b.tagName||b.isContentEditable};d.prototype.handleKey=function(){return this._handleKey.apply(this,arguments)};d.addKeycodes=function(a){for(var b in a)a.hasOwnProperty(b)&&(n[b]=a[b]);p=null};
d.init=function(){var a=d(u),b;for(b in a)"_"!==b.charAt(0)&&(d[b]=function(b){return function(){return a[b].apply(a,arguments)}}(b))};d.init();q.Mousetrap=d;"undefined"!==typeof module&&module.exports&&(module.exports=d);"function"===typeof define&&define.amd&&define(function(){return d})}})("undefined"!==typeof window?window:null,"undefined"!==typeof window?document:null);

var acc = document.getElementsByClassName("accordion");
var i;

for (i = 0; i < acc.length; i++) {
  acc[i].addEventListener("click", function() {
    this.classList.toggle("active");
    var panel = this.nextElementSibling;
    if (panel.style.maxHeight) {
      panel.style.maxHeight = null;
    } else {
      panel.style.maxHeight = panel.scrollHeight + "px";
    }
  });
}

:: Beginning [StoryInit]
<<set $bookmarks to []>>
<<set UIBar.unstow(true)>>
<<set $correctGuesses to 0>>
<<set $incorrectGuesses to 0>>

:: PassageFooter [nobr]
	<div id="title-row">
		<span id="top-passage-text"><<print passage()>><<total_passages>></span>
		<span id="top-bookmark-button">
			<i class='material-icons'>
				<<bookmark>>
			</i>
		</span>
	<br>
	<br>
	<div id="header-buttons">
		<span id="top-back-button">
			<<if State.length > 1>>
				<i class='material-icons' id="top-back-icon">
					<<back "west">>
				</i>
			<</if>>
		</span>

		<span id="top-forward-button">
			<<if def _next_passage>>
				<i class='material-icons'>
					<a data-passage={{_next_passage}} class="link-internal macro-link" id="top-forward-link" tabindex="0">east</a>
				</i>
			<</if>>
		</span>
	</div>
	<<script>>
		Mousetrap.bind("right", function() {
			$('#top-forward-link').click();
			});
		Mousetrap.bind("left", function() {
			$('#top-back-button a').click();
			});
	<</script>>


:: Widgets [widget nobr] {"position":"138,60","size":"100,100"}

<<widget "cycler">>
	<<set _word1 to $args[0]>>
	<<set _word2 to $args[1]>>
	<<cycle "_receiver">>
		<<option _word1 selected>>
		<<option _word2>>
	<</cycle>>
<</widget>>

<<widget "blue">>
	<<set _word to $args[0]>>
	<<set _outputString to "<span class = 'blue'>" + _word + "</span>">>
	<<if _word.toUpperFirst() is _word>>
		<<set _blueString to "<span class='blue'>Blue</span>">>
	<<else>>
		<<set _blueString to "<span class='blue'>blue</span>">>
	<</if>>
	<<cycle "_one">>
		<<option _blueString selected>>
		<<option _outputString>>
	<</cycle>>
<</widget>>

<<widget "kettle">>
	<<set _word to $args[0]>>
	<<set _outputString to "<span class = 'kettle'>" + _word + "</span>">>
	<<if _word.toUpperFirst() is _word>>
		<<set _kettleString to "<span class='kettle'>Kettle</span>">>
	<<else>>
		<<set _kettleString to "<span class='kettle'>kettle</span>">>
	<</if>>
	<<cycle "_one">>
		<<option _kettleString selected>>
		<<option _outputString>>
	<</cycle>>
<</widget>>

<<widget "bl">>
	<<set _word to $args[0]>>
	<<set _fragment to $args[1]>>
	<<set _outputString to "<span class = 'blue'>" + _word + "</span>">>
	<<if _word.toUpperFirst() is _word>>
		<<set _blueString to "<span class='blue'>" + _fragment + "</span>">>
	<<else>>
		<<set _blueString to "<span class='blue'>" + _fragment + "</span>">>
	<</if>>
	<<cycle "_one">>
		<<option _blueString selected>>
		<<option _outputString>>
	<</cycle>>
<</widget>>

<<widget "ket">>
	<<set _word to $args[0]>>
	<<set _fragment to $args[1]>>
	<<set _outputString to "<span class = 'kettle'>" + _word + "</span>">>
	<<if _word.toUpperFirst() is _word>>
		<<set _kettleString to "<span class='kettle'>" + _fragment + "</span>">>
	<<else>>
		<<set _kettleString to "<span class='kettle'>" + _fragment + "</span>">>
	<</if>>
	<<cycle "_one">>
		<<option _kettleString selected>>
		<<option _outputString>>
	<</cycle>>
<</widget>>

<<widget "cite">>
	<<set _page1 to $args[0]>>
	<<if $args.length == 2>>
		<<set _sourceTitle to $args[1]>>
		<<if _page1 == "*">>
			<<set _outputString to "(n.p.)">>
			<<set _citation_text to "(" + Story.get(_sourceTitle).text + ", Web)">>
		<<else>>
			<<set _outputString to "(" + _page1 + ")">>
			<<set _citation_text to "(" + Story.get(_sourceTitle).text + " p" + _page1 + ")">>
		<</if>>
	<<else>>
		<<set _page2 to $args[1]>>
		<<set _sourceTitle to $args[2]>>
		<<set _outputString to "(" + _page1 + "-" + _page2 + ")">>
		<<set _citation_text to "<span class='citation-link'>(" + Story.get(_sourceTitle).text + " p" + _page1 + "-" + _page2 + "))</span>">>
	<</if>>
	
	
	<span class='citation-link'>
		<<cycle "_citation" autoselect>>
			<<option _outputString>>
			<<option _citation_text>>
		<</cycle>>
	</span>
	
<</widget>>


<<widget "define">>
	<<set _label to $args[0]>>
		<<if $args.length == 2>>
			<<set _destination to $args[1]>>
			<span class= "definition-link">[[_label->_destination]]</span>
		<<else>>
			<span class= "definition-link">[[_label]]</span>
	<</if>>
<</widget>>


			<span class= "definition-link"><a href= "#_destination">_label</a></span>



<<widget "excerpt">>
	<<set _label to $args[0]>>
	<<if $args.length == 2>>
		<<set _destination to $args[1]>>
		<span class= "excerpt-link">[[_label->_destination]]</span>
	<<else>>
		<span class= "excerpt-link">[[_label]]</span>
	<</if>>
<</widget>>

<<widget "bookmark">>
	<<set _passage_link to "[[" + passage() + "]]">>
	<<if def setup.bookmarks>>
		<<if setup.bookmarks.includes(_passage_link)>>
			bookmark
		<<else>>
			<<linkreplace "bookmark_outline" t8n>>bookmark
				<<set setup.bookmarks.pushUnique(_passage_link)>>
				<<set $bookmarks to setup.bookmarks>>
			<</linkreplace>>
		<</if>>
	<<else>>
		<<linkreplace "bookmark_outline" t8n>>bookmark
			<<set setup.bookmarks to [_passage_link]>>
			<<set $bookmarks to setup.bookmarks>>
		<</linkreplace>>
	<</if>>
<</widget>>

<<widget "get_table_of_contents">>
	<<set _tag to $args[0]>>
	<<set _passages to Story.lookup("tags", _tag)>>
	<<for _i to 0; _i lt _passages.length; _i++>>
		[[_passages[_i].title]]
	<</for>>
	There are <<print _passages.length>> passages tagged with <<print _tag>>.
<</widget>>

<<widget "total_passages">>
	<<set _tags to tags()>>
	<<unset _passages>>
	<<if _tags.includes("intro")>>
		<<set _passages to Story.lookup("tags", "intro")>>
	<<elseif _tags.includes("bk")>>
		<<set _passages to Story.lookup("tags", "bk")>>
	<<elseif _tags.includes("hs")>>
		<<set _passages to Story.lookup("tags", "hs")>>
	<<elseif _tags.includes("tda")>>
		<<set _passages to Story.lookup("tags", "tda")>>
	<<elseif _tags.includes("ph")>>
		<<set _passages to Story.lookup("tags", "ph")>>
	<<elseif _tags.includes("klt")>>
		<<set _passages to Story.lookup("tags", "klt")>>
	<<elseif _tags.includes("tar")>>
		<<set _passages to Story.lookup("tags", "tar")>>
	<<elseif _tags.includes("eg")>>
		<<set _passages to Story.lookup("tags", "eg")>>
	<<elseif _tags.includes("attt")>>
		<<set _passages to Story.lookup("tags", "attt")>>
	<<elseif _tags.includes("lai")>>
		<<set _passages to Story.lookup("tags", "lai")>>
	<<elseif _tags.includes("aw")>>
		<<set _passages to Story.lookup("tags", "aw")>>
	<<elseif _tags.includes("mrbb")>>
			<<set _passages to Story.lookup("tags", "mrbb")>>
	<</if>>
	<<if def _passages>>
		<<print " / " + _passages.length>>
	<</if>>
<</widget>>

<<widget "scroll_case_study">>
/* Takes two arguments: a tag to print, Bool include_glossary, Bool include_excerpts, and Bool make_anchors */ 

	<<set _tag to $args[0]>>
	<<set _passages to Story.lookup("tags", _tag)>>

	<<for _i to 0; _i lt _passages.length; _i++>>
		<span class = "scroll_mode_passage">

			<span class = "scroll_mode_page_number">
				_i
			</span>

			<span class = "scroll_mode_passage_text">
				<<nobr>>
					<a name="_passages[_i].title"></a><<include _passages[_i].title>>
				<</nobr>>
			</span>

		</span>
	<</for>>

	<<if _include_glossary>>
	GLOSSARY
	<</endif>>
<</widget>>


/* 
<<widget "guessing_game">>

	<button class="guess-button" data-guess="alba">Alba</button>
	<button class="guess-button" data-guess="gpt">GPT</button>
	<span class="editors_note">Editors note: This passage was written by...</span>
	<script>
	  $(document).on('click', '.guess-button', function () {
	    var guess = $(this).data('guess');
	    var tags = State.passage.tags();
	    console.log(guess);
	  });
	</script>
<</widget>>
 	recordScroll() {
        this.scroll_data.push(this.state.scroll_top);
    }

    handleScroll(e) {
        const scroll_top = e.target.scrollTop;
        this.setState({scroll_top});
    } 
*/
:: StoryCaption [nobr]

<div id="navigation-list">
	<<link '<div class= "nav-link"><span class="nav-button">a</span> introduction</div>' 'Introduction 1'>><</link>><br>
	<<link '<div class= "nav-link"><span class="nav-button">1</span> GESTURE</div>' 'Section 1: GESTURE'>><</link>><br>
	<<link '<div class= "nav-link"><span class="nav-button">2</span> COGNITION</div>' 'Section 2: COGNITION'>><</link>><br>
	<<link '<div class= "nav-link"><span class="nav-button">3</span> PRACTICE</div>' 'Section 3: PRACTICE'>><</link>><br>
	<<link '<div class= "nav-link"><span class="nav-button">b</span> conclusion</div>''C 1'>><</link>><br>
</div>

<div id="settings-list">
	<<link '<div class="settings-button" id="bookmark-link"><i class="material-icons">bookmark</i> <span class="settings-text">Bookmarks</span></div>' 'Bookmarks'>><</link>>
	<div class="settings-button" id="save-button"><i class="material-icons">save</i> <span class="settings-text">Save</span></div>
	<div class="settings-button" id="load-button"><i class="material-icons">history</i> <span class="settings-text">Load</span></div>
	<div class="settings-button" id="restart-button"><i class="material-icons">refresh</i> <span class="settings-text">Restart</span></div>
</div>

<<script>>

var save_button = document.getElementById("save-button");
save_button.addEventListener("click", function() {
	Save.slots.save(1);
	});

var load_button = document.getElementById("load-button");
load_button.addEventListener("click", function() {
	Save.slots.load(1);
	});

var back_button = document.getElementById("restart-button");
back_button.addEventListener("click", function() {
	Engine.restart();
	});

<</script>>



:: Bookmarks [nobr]

<<if def setup.bookmarks>>
	<<for _i to 0; _i lt setup.bookmarks.length; _i++>>
		<div class="bookmark_link"><<print setup.bookmarks[_i]>></div>
	<</for>>
<<elseif def $bookmarks>>
	<<for _i to 0; _i lt $bookmarks.length; _i++>>
		<div class="bookmark_link"><<print $bookmarks[_i]>></div>
	<</for>>
<</if>>
